/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfacesCadastro;

import Classes.Dependente;
import Classes.Sonumeros;
import Classes.Titular;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author TURUGO
 */
public class CadastroDependente extends javax.swing.JFrame {
    private boolean editar=false;
    private boolean checkbox =false;
    /**
     * Creates new form CadastroDependente
     */
    public CadastroDependente() {
        initComponents();
        txtNumero.setDocument(new Sonumeros());
        txtCPF.setDocument(new Sonumeros());
        txtTelefone.setDocument(new Sonumeros());
        
        String situacao;
        
        DefaultTableModel dtm = (DefaultTableModel) tableDep.getModel();
        
        for (int i = 0; i < Dependente.listaDep.size(); i++) {
            situacao = "Ativo";
            if(Dependente.listaDep.get(i).isSituacao()==false){
                situacao = "Inativo";
            }
            dtm.addRow(new Object[]{Dependente.listaDep.get(i).getCodDependente(),Dependente.listaDep.get(i).getNome(),Dependente.listaDep.get(i).getCpf(),
            Dependente.listaDep.get(i).getTelefone(),Dependente.listaDep.get(i).getEstado(),
            Dependente.listaDep.get(i).getCidade(),Dependente.listaDep.get(i).getBairro(),
            Dependente.listaDep.get(i).getRua(),Dependente.listaDep.get(i).getNumero(),
            Dependente.listaDep.get(i).getComplemento(), situacao});
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtNom = new javax.swing.JTextField();
        txtCPF = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtEstado = new javax.swing.JTextField();
        txtCidade = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtBairro = new javax.swing.JTextField();
        txtTelefone = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtRua = new javax.swing.JTextField();
        txtNumero = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtComplemento = new javax.swing.JTextField();
        btnExcluir = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnNovo = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableDep = new javax.swing.JTable();
        btnCancelar = new javax.swing.JButton();
        checkboxCadastrarEndereco = new javax.swing.JCheckBox();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Dependentes");
        setResizable(false);

        jLabel1.setText("Nome*");

        txtNom.setEnabled(false);

        txtCPF.setEnabled(false);

        jLabel4.setText("CPF*");

        jLabel2.setText("Estado*");

        txtEstado.setEnabled(false);

        txtCidade.setEnabled(false);

        jLabel5.setText("Cidade*");

        jLabel6.setText("Bairro*");

        txtBairro.setEnabled(false);

        txtTelefone.setEnabled(false);

        jLabel7.setText("Telefone*");

        jLabel3.setText("Rua*");

        txtRua.setEnabled(false);

        txtNumero.setEnabled(false);

        jLabel8.setText("Numero*");

        jLabel9.setText("Complemento*");

        txtComplemento.setEnabled(false);

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Eliminar.png"))); // NOI18N
        btnExcluir.setText("Ativar/Desativar Cadastro");
        btnExcluir.setEnabled(false);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pencil.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.setEnabled(false);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/disk.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.setEnabled(false);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/add.png"))); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        tableDep.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "CPF", "Telefone", "Estado", "Cidade", "Bairro", "Rua", "Numero", "Complemento", "Situação"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableDep.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tableDepMouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(tableDep);

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cancel.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setEnabled(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        checkboxCadastrarEndereco.setText("Cadastrar endereço");
        checkboxCadastrarEndereco.setEnabled(false);
        checkboxCadastrarEndereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxCadastrarEnderecoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(txtRua, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel3)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(20, 20, 20)
                                        .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel2))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel6))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(checkboxCadastrarEndereco))
                                .addGap(18, 18, 18)
                                .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(205, 205, 205)
                                        .addComponent(jLabel4)
                                        .addGap(130, 130, 130)
                                        .addComponent(jLabel7))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnSalvar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnEditar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnExcluir)
                                        .addGap(8, 8, 8)
                                        .addComponent(btnCancelar)))))
                        .addGap(0, 137, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel1))
                    .addComponent(jLabel4)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel7)))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(checkboxCadastrarEndereco)
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(jLabel8)))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtRua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNovo)
                    .addComponent(btnSalvar)
                    .addComponent(btnEditar)
                    .addComponent(btnExcluir)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(btnCancelar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        btnEditar.setEnabled(false);
        btnExcluir.setEnabled(false);
        tableDep.setEnabled(false);
        tableDep.setVisible(false);
        checkbox = false;
        btnCancelar.setEnabled(true);
        btnSalvar.setEnabled(true);
        btnNovo.setEnabled(false);
        checkboxCadastrarEndereco.setEnabled(true);
        txtCPF.setEnabled(true);
        txtNom.setEnabled(true);
        txtTelefone.setEnabled(true);
        
        
        txtNom.setText("");
        txtBairro.setText("");
        txtCPF.setText("");
        txtCidade.setText("");
        txtComplemento.setText("");
        txtEstado.setText("");
        txtNumero.setText("");
        txtRua.setText("");
        txtTelefone.setText("");
        
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        boolean cpfIgual = false; 
        int id = -1;
        int posicao = -1;
        String cpfV = "-1";
                
        if(editar==true){
            Object obj = tableDep.getModel().getValueAt(tableDep.getSelectedRow() ,0);
            String str = String.valueOf(obj);
            id = Integer.parseInt(str);
            posicao = 0;
        
        
        for(int i = 0; i < Dependente.listaDep.size(); i++){
                if(Dependente.listaDep.get(i).getCodDependente()==id){
                        posicao = i;
                    }
                }
        cpfV = Dependente.listaDep.get(posicao).getCpf();
        
        }
        
        if((txtNom.getText().equals("")||txtCPF.getText().equals("")||
           txtTelefone.getText().equals(""))||(checkbox==true &&(txtNom.getText().equals("")||
           txtCPF.getText().equals("")||txtTelefone.getText().equals("")||txtBairro.getText().equals("")
           ||txtCidade.getText().equals("")||txtComplemento.getText().equals("")||
           txtEstado.getText().equals("")||txtNumero.getText().equals("")||txtRua.getText().equals("")))){
           JOptionPane.showMessageDialog(this, "Verificar campo em branco!");  
            
        }else{
            
            for(int i=0; i<Titular.titular.size(); i++){
                if(Titular.titular.get(i).getCpf().equals(txtCPF.getText())){
                    cpfIgual = true;
                }
            }
            
            for(int i=0; i<Dependente.listaDep.size(); i++){
                if(Dependente.listaDep.get(i).getCpf().equals(txtCPF.getText())){
                    cpfIgual = true;
                }
            }
        
            
            if((cpfIgual==false)||(((editar==true) && (cpfV.equals(txtCPF.getText())))==true)){
                
                btnCancelar.setEnabled(false);
                btnSalvar.setEnabled(false);
                btnNovo.setEnabled(true);
                txtBairro.setEnabled(false);
                txtCPF.setEnabled(false);
                txtCidade.setEnabled(false);
                txtComplemento.setEnabled(false);
                txtEstado.setEnabled(false);
                txtNom.setEnabled(false);
                txtNumero.setEnabled(false);
                txtRua.setEnabled(false);
                txtTelefone.setEnabled(false);
                checkboxCadastrarEndereco.setSelected(false);
                checkboxCadastrarEndereco.setEnabled(false);


                if(editar ==true){
                    String nome = txtNom.getText();
                    String cpf = txtCPF.getText();
                    String telefone = txtTelefone.getText();
                    int pos = tableDep.getSelectedRow();
                    Dependente.listaDep.get(pos).setCpf(cpf);
                    Dependente.listaDep.get(pos).setNome(nome);
                    Dependente.listaDep.get(pos).setTelefone(telefone);
                    String estado = "";
                    String cidade = "";
                    String bairro = "";
                    String rua = "";
                    int numero = 0;
                    String complemento = "";        

                    if(checkbox==true){
                        estado = txtEstado.getText();
                        cidade = txtCidade.getText();
                        bairro = txtBairro.getText();
                        rua = txtRua.getText();
                        numero = Integer.parseInt(txtNumero.getText()); 
                        complemento = txtComplemento.getText();
                        checkbox = false;
                    }

                    Dependente.listaDep.get(pos).setCidade(cidade);
                    Dependente.listaDep.get(pos).setCadEndereco(checkbox);
                    Dependente.listaDep.get(pos).setBairro(bairro);
                    Dependente.listaDep.get(pos).setEstado(estado);
                    Dependente.listaDep.get(pos).setRua(rua);
                    Dependente.listaDep.get(pos).setNumero(numero);
                    Dependente.listaDep.get(pos).setComplemento(complemento);


                    tableDep.setValueAt(nome, pos, 1);
                    tableDep.setValueAt(cpf, pos, 2);
                    tableDep.setValueAt(telefone, pos, 3);
                    tableDep.setValueAt(estado, pos, 4);
                    tableDep.setValueAt(cidade, pos, 5);
                    tableDep.setValueAt(bairro, pos, 6);
                    tableDep.setValueAt(rua, pos, 7);
                    tableDep.setValueAt(numero, pos, 8);
                    tableDep.setValueAt(complemento, pos, 9);

                    JOptionPane.showMessageDialog(null,"Dados alterados com sucesso!");

                    editar = false;
                    checkboxCadastrarEndereco.setEnabled(false);


                }else{
                    Dependente dependente = new Dependente();
                    id = Titular.getContadorAssociado();
                    String nome = txtNom.getText();
                    String cpf = txtCPF.getText();
                    String telefone = txtTelefone.getText();

                    String estado;
                    String cidade;
                    String bairro;
                    String rua;              
                    int numero;
                    String complemento;

                    if(checkbox==true){
                        estado = txtEstado.getText();
                        cidade = txtCidade.getText();
                        bairro = txtBairro.getText();
                        rua = txtRua.getText();
                        numero = Integer.parseInt(txtNumero.getText()); 
                        complemento = txtComplemento.getText();

                    }else{
                        estado = "";
                        cidade = "";
                        bairro = "";
                        rua = "";
                        numero = Integer.parseInt("0"); 
                        complemento = "";
                    }

                    dependente.cadastrar(nome, estado, cidade, bairro, rua, numero, complemento, telefone, cpf, checkbox);
                    Dependente.listaDep.add(dependente);
                    DefaultTableModel dtm = (DefaultTableModel) tableDep.getModel();

                    dtm.addRow(new Object[]{id, nome, cpf, telefone, estado, cidade, bairro, rua, numero, complemento, "Ativo"});

                    JOptionPane.showMessageDialog(null,"Dados cadastrados com sucesso!");
                    }

                txtNom.setText("");
                txtBairro.setText("");
                txtCPF.setText("");
                txtCidade.setText("");
                txtComplemento.setText("");
                txtEstado.setText("");
                txtNumero.setText("");
                txtRua.setText("");
                txtTelefone.setText("");
                tableDep.setEnabled(true);
                tableDep.setVisible(true);
                
            }else{ 
                if(cpfIgual==true){
                    JOptionPane.showMessageDialog(null, "CPF ja cadastrado!");
      }
            }
        }
        
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void checkboxCadastrarEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxCadastrarEnderecoActionPerformed
        if(checkboxCadastrarEndereco.isSelected()){
            checkbox = true;
            txtEstado.setEnabled(true);
            txtCidade.setEnabled(true);
            txtBairro.setEnabled(true);
            txtRua.setEnabled(true);
            txtNumero.setEnabled(true);
            txtComplemento.setEnabled(true);   
        }else{
            checkbox= false;
            txtEstado.setEnabled(false);
            txtCidade.setEnabled(false);
            txtBairro.setEnabled(false);
            txtRua.setEnabled(false);
            txtNumero.setEnabled(false);
            txtComplemento.setEnabled(false);  
    }
    }//GEN-LAST:event_checkboxCadastrarEnderecoActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        tableDep.setEnabled(true);
        txtBairro.setEnabled(false);
        txtCPF.setEnabled(false);
        txtCidade.setEnabled(false);
        txtComplemento.setEnabled(false);
        txtEstado.setEnabled(false);
        txtNom.setEnabled(false);
        txtNumero.setEnabled(false);
        txtRua.setEnabled(false);
        txtTelefone.setEnabled(false);
        btnCancelar.setEnabled(false);
        btnEditar.setEnabled(false);
        btnExcluir.setEnabled(false);
        btnSalvar.setEnabled(false);
        btnNovo.setEnabled(true);
        checkboxCadastrarEndereco.setSelected(false);
        checkboxCadastrarEndereco.setEnabled(false);
        tableDep.setVisible(true);
        tableDep.setEnabled(true);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        btnEditar.setEnabled(false);
        btnExcluir.setEnabled(false);
        tableDep.setEnabled(false);
        tableDep.setVisible(false);
        editar = true;
        btnCancelar.setEnabled(true);
        btnSalvar.setEnabled(true);
        btnNovo.setEnabled(false);
        txtCPF.setEnabled(true);
        txtNom.setEnabled(true);
        txtTelefone.setEnabled(true);
        checkboxCadastrarEndereco.setEnabled(true);
        
        int pos = tableDep.getSelectedRow();
            if(Dependente.listaDep.get(pos).isCadEndereco()==true){
                checkboxCadastrarEndereco.setSelected(Dependente.listaDep.get(pos).isCadEndereco());
                checkbox = true;
                txtEstado.setEnabled(true);
                txtCidade.setEnabled(true);
                txtBairro.setEnabled(true);
                txtRua.setEnabled(true);
                txtNumero.setEnabled(true);
                txtComplemento.setEnabled(true);
    }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void tableDepMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDepMouseReleased
        if(tableDep.getSelectedRow() != -1){
            btnEditar.setEnabled(true);
            btnExcluir.setEnabled(true);
            
            int linhaSel = tableDep.getSelectedRow();
            
            txtNom.setText(Dependente.listaDep.get(linhaSel).getNome());
            txtCPF.setText(Dependente.listaDep.get(linhaSel).getCpf());
            txtBairro.setText(Dependente.listaDep.get(linhaSel).getBairro());
            txtCidade.setText(Dependente.listaDep.get(linhaSel).getCidade());
            txtComplemento.setText(Dependente.listaDep.get(linhaSel).getComplemento());
            txtEstado.setText(Dependente.listaDep.get(linhaSel).getEstado());
            txtNumero.setText(String.valueOf(Dependente.listaDep.get(linhaSel).getNumero()));
            txtRua.setText(Dependente.listaDep.get(linhaSel).getRua());
            txtTelefone.setText(Dependente.listaDep.get(linhaSel).getTelefone());
        }
    }//GEN-LAST:event_tableDepMouseReleased

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        btnEditar.setEnabled(false);
        btnExcluir.setEnabled(false);
        boolean linkado = false;
        
        Object obj = tableDep.getModel().getValueAt(tableDep.getSelectedRow() ,0);
        String str = String.valueOf(obj);
        int iD = Integer.parseInt(str);
        int id = 0;
        int posTitular=0;
        int posLink=0;
        
        for(int i = 0; i < Dependente.listaDep.size(); i++){
            if(Dependente.listaDep.get(i).getCodDependente()==iD){
                id = i;
            }    
        }
        
            for(int i=0; i<Titular.titular.size(); i++){
                for(int j=0; j<Titular.titular.get(i).codDependente.size(); j++){
                    if(Titular.titular.get(i).codDependente.get(j)==iD){
                        linkado = true;
                        posTitular = i;
                        posLink = j;
                    }
                }
            }
        
            if(linkado == true){
                if(Dependente.listaDep.get(id).isSituacao()==true){
                    if(JOptionPane.showConfirmDialog(null, "Deseja realmente desativar o registro?", "Pergunta", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE)== JOptionPane.YES_OPTION){
                        Dependente.listaDep.get(id).setSituacao(false);
                        Titular.titular.get(posTitular).codDependente.remove(posLink);
                        tableDep.getModel().setValueAt("Inativo" ,tableDep.getSelectedRow() , 10);

                        JOptionPane.showMessageDialog(null, "Registro desativado com sucesso!");
                    }

                }else{
                    if(JOptionPane.showConfirmDialog(null, "Deseja realmente reativar o registro?", "Pergunta", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE)== JOptionPane.YES_OPTION){
                        Dependente.listaDep.get(id).setSituacao(true);
                        tableDep.getModel().setValueAt("Ativo" ,tableDep.getSelectedRow() , 10);

                        JOptionPane.showMessageDialog(null, "Registro reativado com sucesso!");
                    }
                }
                
            }else{
                if(Dependente.listaDep.get(id).isSituacao()==true){
                    if(JOptionPane.showConfirmDialog(null, "Deseja realmente desativar o registro?", "Pergunta", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE)== JOptionPane.YES_OPTION){
                        Dependente.listaDep.get(id).setSituacao(false);
                        tableDep.getModel().setValueAt("Inativo" ,tableDep.getSelectedRow() , 10);

                        JOptionPane.showMessageDialog(null, "Registro desativado com sucesso!");
                    }

                }else{
                    if(JOptionPane.showConfirmDialog(null, "Deseja realmente reativar o registro?", "Pergunta", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE)== JOptionPane.YES_OPTION){
                        Dependente.listaDep.get(id).setSituacao(true);
                        tableDep.getModel().setValueAt("Ativo" ,tableDep.getSelectedRow() , 10);

                        JOptionPane.showMessageDialog(null, "Registro reativado com sucesso!");
                    }
                }
            }
    }//GEN-LAST:event_btnExcluirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroDependente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroDependente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroDependente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroDependente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroDependente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JCheckBox checkboxCadastrarEndereco;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable tableDep;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JTextField txtCPF;
    private javax.swing.JTextField txtCidade;
    private javax.swing.JTextField txtComplemento;
    private javax.swing.JTextField txtEstado;
    private javax.swing.JTextField txtNom;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtRua;
    private javax.swing.JTextField txtTelefone;
    // End of variables declaration//GEN-END:variables

    
public void recebendo(int recebe){
    //posicao = recebe;
        
}



}
